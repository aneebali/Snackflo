[versions]
agp = "8.9.2"
firebaseCommonKtx = "21.0.0"
kotlin = "2.1.10"
compose = "1.8.1"
compose-material3 = "1.1.2"
composeMultiplatform = "1.8.1"

androidx-core = "1.16.0"
androidx-activityCompose = "1.8.0"
androidx-lifecycle = "2.9.0"
androidx-navigation = "2.9.0-alpha16"
coreI18n = "1.0.0"

datastore = "1.1.7"
firebaseFirestore = "2.1.0" # GitLive KMP wrapper
gservices = "4.4.2"

coil = "3.2.0"
ktor = "3.0.1"

androidx-espresso = "3.6.1"
androidx-testExt = "1.2.1"

serialization = "1.6.3"
datetime = "0.5.0"
composeDialogs = "0.9.0"
multiplatformSettings = "1.1.1"
firebaseCommon = "2.1.0" # Same as GitLive Firestore

[libraries]

# AndroidX Core
androidx-core-ktx = { module = "androidx.core:core-ktx", version.ref = "androidx-core" }
androidx-core-i18n = { module = "androidx.core:core-i18n", version.ref = "coreI18n" }

# AndroidX Lifecycle
androidx-lifecycle-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "androidx-lifecycle" }
androidx-lifecycle-runtimeCompose = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle" }

# AndroidX Navigation
androidx-navigation-compose = { module = "org.jetbrains.androidx.navigation:navigation-compose", version.ref = "androidx-navigation" }

# Compose
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-ui-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui-tooling-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-material = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }

# Activity Compose
androidx-activity-compose = { module = "androidx.activity:activity-compose", version.ref = "androidx-activityCompose" }

# DataStore
datastore-preferences = { module = "androidx.datastore:datastore-preferences", version.ref = "datastore" }

# Firebase (GitLive Kotlin Multiplatform)
firebase-common-ktx = { module = "com.google.firebase:firebase-common-ktx", version.ref = "firebaseCommonKtx" }
firebase-firestore = { module = "dev.gitlive:firebase-firestore", version.ref = "firebaseFirestore" }

# Coil (for Compose & Ktor)
coil-compose = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-network-ktor = { module = "io.coil-kt.coil3:coil-network-ktor3", version.ref = "coil" }

# Ktor Clients
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }

# Kotlin Test
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }

# AndroidX Test Libraries
androidx-espresso-core = { module = "androidx.test.espresso:espresso-core", version.ref = "androidx-espresso" }
androidx-test-ext-junit = { module = "androidx.test.ext:junit", version.ref = "androidx-testExt" }

kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }

compose-material-dialogs-core = { module = "io.github.vanpra.compose-material-dialogs:core", version.ref = "composeDialogs" }
compose-material-dialogs-datetime = { module = "io.github.vanpra.compose-material-dialogs:datetime", version.ref = "composeDialogs" }

multiplatform-settings = { module = "com.russhwolf:multiplatform-settings", version.ref = "multiplatformSettings" }

firebase-common = { module = "dev.gitlive:firebase-common", version.ref = "firebaseCommon" }

compose-material-icons-extended = { module = "androidx.compose.material:material-icons-extended", version.ref = "compose" }


[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }

kotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinCocoapods = { id = "org.jetbrains.kotlin.native.cocoapods", version.ref = "kotlin" }

composeCompiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
composeMultiplatform = { id = "org.jetbrains.compose", version.ref = "composeMultiplatform" }

googleServices = { id = "com.google.gms.google-services", version.ref = "gservices" }

kotlinSerialization = { id = "org.jetbrains.kotlin.plugin.serialization", version = "1.9.0" }

